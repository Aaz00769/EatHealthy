// <auto-generated />
using System;
using AspNetCoreArchTemplate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspNetCoreArchTemplate.Data.Migrations
{
    [DbContext(typeof(EatHealthyDbContext))]
    [Migration("20250718104109_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreArchTemplate.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Product ID");

                    b.Property<int>("Calories")
                        .HasColumnType("int")
                        .HasComment("Calories per 100g");

                    b.Property<int?>("Carbohydrates")
                        .HasColumnType("int")
                        .HasComment("Carbohydrates per 100g (g)");

                    b.Property<int?>("Fats")
                        .HasColumnType("int")
                        .HasComment("Fats per 100g (g)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasComment("Product name");

                    b.Property<int?>("Proteins")
                        .HasColumnType("int")
                        .HasComment("Proteins per 100g (g)");

                    b.Property<int?>("ServingSizeGrams")
                        .HasColumnType("int")
                        .HasComment("Standard serving size in grams");

                    b.HasKey("Id");

                    b.ToTable("Products", t =>
                        {
                            t.HasComment("Product");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b767862-66d7-4ace-83b7-51613252c685"),
                            Calories = 52,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = new Guid("c73429f2-e2eb-4a1d-a52d-1563f52f9ea2"),
                            Calories = 89,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("1508009a-e861-4dc3-a44d-0dffb32b21b6"),
                            Calories = 41,
                            Name = "Carrot"
                        },
                        new
                        {
                            Id = new Guid("f36ec06d-e355-4b63-a59c-91fcef5e0545"),
                            Calories = 34,
                            Name = "Broccoli"
                        },
                        new
                        {
                            Id = new Guid("f1fe4e41-bce2-4b75-ad3d-1d6b750804a8"),
                            Calories = 165,
                            Name = "Chicken Breast"
                        },
                        new
                        {
                            Id = new Guid("22d3eb52-22a0-410f-b399-89f1e8b20773"),
                            Calories = 208,
                            Name = "Salmon"
                        },
                        new
                        {
                            Id = new Guid("2d21ce5b-fe89-44e9-bbf5-a9de0bf47973"),
                            Calories = 155,
                            Name = "Egg"
                        },
                        new
                        {
                            Id = new Guid("557b1505-97c3-43b1-9037-473b2cd3ce93"),
                            Calories = 579,
                            Name = "Almonds"
                        },
                        new
                        {
                            Id = new Guid("9bb8b0d0-c86f-44a1-8d82-20df6159d903"),
                            Calories = 123,
                            Name = "Brown Rice"
                        },
                        new
                        {
                            Id = new Guid("8b5f3fe7-835c-466e-8aa4-63af338688c4"),
                            Calories = 389,
                            Name = "Oats"
                        },
                        new
                        {
                            Id = new Guid("46c76cbb-a166-4498-817a-5c0b37f4c75b"),
                            Calories = 61,
                            Name = "Milk (Whole)"
                        },
                        new
                        {
                            Id = new Guid("83985cba-f3ef-45f2-a0bc-2ea8b5657afd"),
                            Calories = 59,
                            Name = "Greek Yogurt"
                        },
                        new
                        {
                            Id = new Guid("c3d8f3ce-1195-410d-8bcc-6e29264150a0"),
                            Calories = 403,
                            Name = "Cheddar Cheese"
                        },
                        new
                        {
                            Id = new Guid("9dfcf6ca-b86e-423f-98c0-bb710cdf4f93"),
                            Calories = 23,
                            Name = "Spinach"
                        },
                        new
                        {
                            Id = new Guid("d9490ea2-dc8a-4ea2-aef0-988db57b652f"),
                            Calories = 18,
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = new Guid("beae335b-50dd-4731-b5bd-061c54d0f476"),
                            Calories = 77,
                            Name = "Potato"
                        },
                        new
                        {
                            Id = new Guid("4eabf8d4-ce2f-4e10-aef3-4511256c91f5"),
                            Calories = 86,
                            Name = "Sweet Potato"
                        },
                        new
                        {
                            Id = new Guid("59c5cb91-533a-47e6-9d25-91f32c444dd0"),
                            Calories = 250,
                            Name = "Beef (Lean)"
                        },
                        new
                        {
                            Id = new Guid("9153ed88-afaa-44d2-ba48-1c1166c17295"),
                            Calories = 132,
                            Name = "Tuna (Canned in Water)"
                        },
                        new
                        {
                            Id = new Guid("e4c9c62d-b13b-4643-9e12-25bad72a48d1"),
                            Calories = 99,
                            Name = "Shrimp"
                        },
                        new
                        {
                            Id = new Guid("2f987c6f-0860-4824-ad71-46bbb582253d"),
                            Calories = 76,
                            Name = "Tofu"
                        },
                        new
                        {
                            Id = new Guid("3c6b4530-4599-48a3-8037-83eb1ab490b8"),
                            Calories = 116,
                            Name = "Lentils"
                        },
                        new
                        {
                            Id = new Guid("e66f7950-0102-417c-b7e9-d5529f69d9aa"),
                            Calories = 164,
                            Name = "Chickpeas"
                        },
                        new
                        {
                            Id = new Guid("22f2d521-f93b-4fdc-9d0d-4d0c913b3cac"),
                            Calories = 127,
                            Name = "Kidney Beans"
                        },
                        new
                        {
                            Id = new Guid("c98328ca-7671-4636-8711-a40229b0f6ab"),
                            Calories = 16,
                            Name = "Cucumber"
                        },
                        new
                        {
                            Id = new Guid("ea124436-a1fb-4afd-8a46-b61adb78b469"),
                            Calories = 15,
                            Name = "Lettuce"
                        },
                        new
                        {
                            Id = new Guid("eb34f2c4-f444-40e0-bb47-0d214c3a94a5"),
                            Calories = 17,
                            Name = "Zucchini"
                        },
                        new
                        {
                            Id = new Guid("3549960a-2c32-4149-9497-936fc53c6b5d"),
                            Calories = 22,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = new Guid("b53a5bb0-6b7a-4982-9026-3ec5983aff57"),
                            Calories = 160,
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = new Guid("a7105290-975e-44ae-9e91-c990bc075e5e"),
                            Calories = 50,
                            Name = "Pineapple"
                        },
                        new
                        {
                            Id = new Guid("bca1c0d6-266b-4c1d-8384-bb3a404c214b"),
                            Calories = 47,
                            Name = "Orange"
                        },
                        new
                        {
                            Id = new Guid("3ad573e5-bda1-4b00-a4e2-ca532db7b294"),
                            Calories = 57,
                            Name = "Blueberries"
                        },
                        new
                        {
                            Id = new Guid("b326bf6a-9a29-443d-9918-872bf574fd7e"),
                            Calories = 32,
                            Name = "Strawberries"
                        },
                        new
                        {
                            Id = new Guid("8729ce1d-5e20-4ac8-8e88-b6e460e5d027"),
                            Calories = 30,
                            Name = "Watermelon"
                        },
                        new
                        {
                            Id = new Guid("fd1d1dde-c6f9-411d-83c1-09d30f1e32dd"),
                            Calories = 588,
                            Name = "Peanut Butter"
                        },
                        new
                        {
                            Id = new Guid("604c5052-e0cb-470f-8edf-947d1d5039b1"),
                            Calories = 98,
                            Name = "Cottage Cheese"
                        },
                        new
                        {
                            Id = new Guid("02b632ed-4ce6-43e6-96f1-2c76351d2e14"),
                            Calories = 120,
                            Name = "Quinoa"
                        },
                        new
                        {
                            Id = new Guid("74ef7bae-d2c6-4a1b-9e57-6fcb965b6aed"),
                            Calories = 354,
                            Name = "Barley"
                        },
                        new
                        {
                            Id = new Guid("3485f0ee-771a-47a6-bb38-866fb92c27e9"),
                            Calories = 26,
                            Name = "Pumpkin"
                        },
                        new
                        {
                            Id = new Guid("885e49e6-1710-4876-b15b-73a8cf271ec5"),
                            Calories = 81,
                            Name = "Green Peas"
                        },
                        new
                        {
                            Id = new Guid("d25aeaa7-bc83-4117-adb5-4c8bad358282"),
                            Calories = 25,
                            Name = "Cauliflower"
                        },
                        new
                        {
                            Id = new Guid("e0731bd3-4ee2-4e3d-b300-75651f24a76c"),
                            Calories = 25,
                            Name = "Eggplant"
                        },
                        new
                        {
                            Id = new Guid("bd32f447-68dc-433b-ad8f-bfcad40db48c"),
                            Calories = 52,
                            Name = "Raspberries"
                        },
                        new
                        {
                            Id = new Guid("9d92bd77-34ff-4a83-a0f4-a6e74cfe13f4"),
                            Calories = 132,
                            Name = "Black Beans"
                        },
                        new
                        {
                            Id = new Guid("45f3fd0a-ed02-449d-aec9-9f96f92d35d2"),
                            Calories = 230,
                            Name = "Coconut Milk"
                        },
                        new
                        {
                            Id = new Guid("2f70b5d1-73a6-4be1-8518-eb75c888189d"),
                            Calories = 277,
                            Name = "Dates"
                        },
                        new
                        {
                            Id = new Guid("ec86b662-9b24-4838-b206-41905882cd5d"),
                            Calories = 304,
                            Name = "Honey"
                        },
                        new
                        {
                            Id = new Guid("45109a13-9b17-4f6a-8744-228ec63ead77"),
                            Calories = 1,
                            Name = "Green Tea"
                        },
                        new
                        {
                            Id = new Guid("263e5267-2637-40ba-9412-3f226b1b3afc"),
                            Calories = 598,
                            Name = "Dark Chocolate (85%)"
                        });
                });

            modelBuilder.Entity("AspNetCoreArchTemplate.Data.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsApprovedByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Recipes", null, t =>
                        {
                            t.HasComment("User-created recipe");
                        });
                });

            modelBuilder.Entity("AspNetCoreArchTemplate.Data.Models.RecipeProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary Key");

                    b.Property<int>("Grams")
                        .HasColumnType("int")
                        .HasComment("Amount of the product in grams");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Optional note about the product");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key to Product");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign Key to Recipe");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeProducts", null, t =>
                        {
                            t.HasComment("Links a Product to a Recipe with a specific amount");
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AspNetCoreArchTemplate.Data.Models.RecipeProduct", b =>
                {
                    b.HasOne("AspNetCoreArchTemplate.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetCoreArchTemplate.Data.Models.Recipe", "Recipe")
                        .WithMany("RecipeProducts")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNetCoreArchTemplate.Data.Models.Recipe", b =>
                {
                    b.Navigation("RecipeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
